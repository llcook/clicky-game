{"ast":null,"code":"import _objectSpread from \"/Users/LLC/Desktop/code/homework/clicky-game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/LLC/Desktop/code/homework/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/LLC/Desktop/code/homework/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/LLC/Desktop/code/homework/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/LLC/Desktop/code/homework/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/LLC/Desktop/code/homework/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/LLC/Desktop/code/homework/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport NavBar from \"./components/NavBar/index\";\nimport Wrapper from \"./components/Wrapper/index\";\nimport ImageCard from './components/ImageCard/index';\nimport cards from \"./cards.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: cards,\n      score: 0,\n      topScore: 0 // FUNCTIONS CALLED ON PAGE LOAD\n\n    };\n\n    _this.shuffleCards = function (cards) {\n      var shuffledCards = cards.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n      return shuffledCards;\n    };\n\n    _this.resetCards = function (cards) {\n      var resetCards = cards.map(function (card) {\n        return _objectSpread({}, card, {\n          isClicked: false\n        });\n      });\n      return _this.shuffleCards(resetCards);\n    };\n\n    _this.firstClick = function (newData) {\n      var newScore = _this.state.score;\n      newScore++;\n      var newTopScore = Math.max(newScore, _this.state.topScore);\n\n      _this.setState({\n        cards: _this.shuffleCards(newData),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    _this.repeatClick = function (newData) {\n      _this.setState({\n        cards: _this.resetCards(newData),\n        score: 0\n      });\n    };\n\n    _this.handleClick = function (id) {\n      var correctGuess = false;\n\n      var newData = _this.state.cards.map(function (card) {\n        if (card.id === id) {\n          if (!card.isClicked) {\n            card.isClicked = true;\n            correctGuess = true;\n          }\n        }\n\n        return card;\n      });\n\n      correctGuess ? _this.firstClick(newData) : _this.repeatClick(newData);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        cards: this.shuffleCards(this.state.cards)\n      });\n    } // FUNCTIONS\n\n  }, {\n    key: \"render\",\n    // OUTPUT\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(NavBar, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.cards.map(function (card) {\n        return React.createElement(ImageCard, {\n          image: card.image,\n          key: card.id,\n          id: card.id,\n          clicked: card.isClicked,\n          handleClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/LLC/Desktop/code/homework/clicky-game/src/App.js"],"names":["React","Component","NavBar","Wrapper","ImageCard","cards","App","state","score","topScore","shuffleCards","shuffledCards","sort","a","b","Math","random","resetCards","map","card","isClicked","firstClick","newData","newScore","newTopScore","max","setState","repeatClick","handleClick","id","correctGuess","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from \"./components/NavBar/index\";\nimport Wrapper from \"./components/Wrapper/index\";\nimport ImageCard from './components/ImageCard/index';\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n\n  state = {\n    cards,\n    score: 0,\n    topScore: 0\n  }\n\n  // FUNCTIONS CALLED ON PAGE LOAD\n  \n  componentDidMount() {\n    this.setState({ cards: this.shuffleCards(this.state.cards) });\n  }\n\n  // FUNCTIONS\n\n  shuffleCards = cards => {\n    let shuffledCards = cards.sort(function(a, b){return 0.5 - Math.random()});\n    return shuffledCards;\n  };\n\n  resetCards = cards => {\n    const resetCards = cards.map(card => ({ ...card, isClicked: false}));\n    return this.shuffleCards(resetCards);\n  }\n\n  firstClick = newData => {\n    let newScore = this.state.score;\n    newScore++;\n    let newTopScore = Math.max(newScore, this.state.topScore);\n\n    this.setState({\n      cards: this.shuffleCards(newData),\n      score: newScore,\n      topScore: newTopScore,\n    })\n  }\n\n  repeatClick = newData => {\n    this.setState({\n        cards: this.resetCards(newData),\n        score: 0\n    });\n  }\n\n  // CLICK FUNCTION\n\n  handleClick = id => {\n    let correctGuess = false;\n    const newData = this.state.cards.map(card => {\n      if (card.id === id) {\n        if (!card.isClicked) {\n          card.isClicked = true;\n          correctGuess = true;\n        }\n      }\n      return card;\n    });\n\n    correctGuess ? this.firstClick(newData) : this.repeatClick(newData);\n\n  };\n\n  // OUTPUT\n\n  render() {\n    return (\n          <>\n            <NavBar score={this.state.score} topScore={this.state.topScore}/>\n            <Wrapper>\n              {this.state.cards.map(card => (\n                <ImageCard\n                  image={card.image}\n                  key={card.id}\n                  id={card.id}\n                  clicked={card.isClicked}\n                  handleClick={this.handleClick}\n                />\n              ))}\n            </Wrapper>\n          </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}